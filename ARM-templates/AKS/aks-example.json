{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "String",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "String",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "String",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 1023,
            "type": "Int",
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.27.3",
            "type": "String",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "networkPlugin": {
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "type": "String",
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "enableRBAC": {
            "defaultValue": true,
            "type": "Bool",
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "vmssNodePool": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Boolean flag to turn on and off of virtual machine scale sets"
            }
        },
        "windowsProfile": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Boolean flag to turn on and off of virtual machine scale sets"
            }
        },
        "nodeResourceGroup": {
            "type": "String",
            "metadata": {
                "description": "The name of the resource group containing agent pool nodes."
            }
        },
        "upgradeChannel": {
            "allowedValues": [
                "none",
                "patch",
                "rapid",
                "stable",
                "node-image"
            ],
            "type": "String",
            "metadata": {
                "description": "Auto upgrade channel for a managed cluster."
            }
        },
        "adminGroupObjectIDs": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "An array of AAD group object ids to give administrative access."
            }
        },
        "azureRbac": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Enable or disable Azure RBAC."
            }
        },
        "disableLocalAccounts": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Enable or disable local accounts."
            }
        },
        "enablePrivateCluster": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Enable private network access to the Kubernetes cluster."
            }
        },
        "enableAzurePolicy": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Boolean flag to turn on and off Azure Policy addon."
            }
        },
        "enableSecretStoreCSIDriver": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "Boolean flag to turn on and off secret store CSI driver."
            }
        },
        "acrName": {
            "type": "String",
            "metadata": {
                "description": "Specify the name of the Azure Container Registry."
            }
        },
        "acrResourceGroup": {
            "type": "String",
            "metadata": {
                "description": "The name of the resource group the container registry is associated with."
            }
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "String",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "ConnectAKStoACR-2d376f81-f3f5-40ba-87fd-890001c790e0",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))]",
                "[concat('Microsoft.Resources/deployments/', 'AcrDeployment-2d376f81-f3f5-40ba-87fd-890001c790e1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
                            "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/', parameters('guidValue'))]",
                            "properties": {
                                "principalId": "[reference(parameters('resourceName'), '2023-06-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                                "scope": "[resourceId(parameters('acrResourceGroup'),'Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
                            }
                        }
                    ]
                }
            },
            "resourceGroup": "[parameters('acrResourceGroup')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "AcrDeployment-2d376f81-f3f5-40ba-87fd-890001c790e1",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.ContainerRegistry/registries",
                            "apiVersion": "2019-05-01",
                            "name": "arcpaypensetest",
                            "location": "germanywestcentral",
                            "sku": {
                                "name": "Basic"
                            },
                            "properties": {
                                "adminUserEnabled": false
                            },
                            "tags": {
                                "product": "paypense",
                                "environment": "test"
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "93c54646-be8d-459d-9ceb-023cd3cc0282",
            "resourceGroup": "rg-paypense-test"
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2023-06-01",
            "name": "[parameters('resourceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {
                "product": "paypense",
                "environment": "test"
            },
            "sku": {
                "name": "Base",
                "tier": "Free"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "nodeResourceGroup": "[parameters('nodeResourceGroup')]",
                "agentPoolProfiles": [
                    {
                        "name": "paypensesys",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": 1,
                        "enableAutoScaling": false,
                        "vmSize": "Standard_B2s",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": null,
                        "nodeLabels": {},
                        "nodeTaints": [],
                        "enableNodePublicIP": false,
                        "tags": {
                            "product": "paypense",
                            "environment": "test"
                        },
                        "osSKU": "AzureLinux"
                    },
                    {
                        "name": "paypenseusr",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": 1,
                        "enableAutoScaling": false,
                        "vmSize": "Standard_B4ms",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "User",
                        "maxPods": 200,
                        "availabilityZones": [],
                        "nodeLabels": {
                            "product": "paypense"
                        },
                        "nodeTaints": [],
                        "enableNodePublicIP": false,
                        "tags": {
                            "product": "paypense",
                            "environment": "test"
                        },
                        "osSKU": "AzureLinux"
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]"
                },
                "autoUpgradeProfile": {
                    "upgradeChannel": "[parameters('upgradeChannel')]"
                },
                "disableLocalAccounts": "[parameters('disableLocalAccounts')]",
                "aadProfile": {
                    "managed": true,
                    "adminGroupObjectIDs": "[parameters('adminGroupObjectIDs')]",
                    "enableAzureRBAC": "[parameters('azureRbac')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "azurepolicy": {
                        "enabled": "[parameters('enableAzurePolicy')]"
                    },
                    "azureKeyvaultSecretsProvider": {
                        "enabled": "[parameters('enableSecretStoreCSIDriver')]",
                        "config": null
                    }
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "String",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}
